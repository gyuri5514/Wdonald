<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdelivery.member.dao.MemberDAO">
	<select id="findUser" resultType="userVO" parameterType="userVO">
		<![CDATA[
			select * from user_info where user_email = #{user_email}
		]]>
	</select>
	<!-- JOIN -->
	<insert id="winMemJoin">
		<![CDATA[
			insert into user_info (user_email, user_password, user_name, user_gender, user_phone, terms_agree, user_agreedate, sms_agree, email_agree, user_birth,user_regdate,user_status) 
			values (#{user_email},#{user_password},#{user_name},#{user_gender},#{user_phone},#{terms_agree},now(),#{sms_agree},#{email_agree},#{user_birth},now(),3)
		]]>
	</insert>
	
	<insert id="winAddressJoin">
		<![CDATA[
			insert into user_address(user_email, address1, address2,d_key, address_lat, address_lon) values (#{user_email},#{address1},#{address2},1, #{address_lat}, #{address_lon})
		]]>
	</insert>
	<insert id="naverMemJoin"  parameterType="userVO">
		<![CDATA[
			insert into user_info (user_email, user_gender,user_name, user_phone, user_birth,user_regdate,user_status) 
			values (#{user_email},#{user_gender},#{user_name},#{user_phone},#{user_birth},now(),5)
		]]>
	</insert>
	<insert id="kakaoMemJoin"  parameterType="userVO">
		<![CDATA[
			insert into user_info (user_email,user_name, user_gender, user_birth,user_regdate,user_status) 
			values (#{user_email},#{user_name},#{user_gender},#{user_birth},now(),4)
		]]>
	</insert>

	<select id="userSelect" resultType="userVO" parameterType="userVO">
		<![CDATA[
			select * from user_info where user_email = #{user_email}	
		]]>
	</select>
	<update id="mypageUpdate">
		<![CDATA[
			update user_info
			set user_name = #{user_name}, user_phone = #{user_phone}, user_password = #{user_password}
			where user_seq = #{user_seq}
		]]>
	</update>
	<update id="mypageDelete">
		<![CDATA[
			update user_info set user_status = 0 where user_email = #{user_email}
		]]>
	</update>

	<select id="emailChk" resultType="int" parameterType="userVO">
		<![CDATA[
			select count(*) from user_info where user_email = #{user_email}
		]]>
	</select>
	
	<insert id="insertAuthData" parameterType="userVO">
	<![CDATA[
			insert into authkey(user_email) values (#{user_email})
		]]>
	</insert>
	<update id="updateAuthKey" parameterType="java.util.HashMap">
	<![CDATA[
			update authkey set auth_key = #{authKey} where user_email = #{user_email}
		]]>
	</update>
	
	<update id="signUpConfirm" parameterType="String">
	<![CDATA[
			update user_info set user_status = 1 where user_email = #{user_email}
		]]>
	</update>
	
	<select id="isThisKakaoMemberInService" resultType="userVO" parameterType="String">
		<![CDATA[
			select * from user_info where user_email = #{email}
		]]>
	</select>
	<select id="isThisNaverMemberInService" resultType="userVO" parameterType="String">
		<![CDATA[
			select * from user_info where user_email = #{email}
		]]>
	</select>
	
	<select id="isAuthKeyAvailable" resultType="int"  parameterType="java.util.HashMap">
		<![CDATA[
			select count(*) from authkey where user_email = #{email} and auth_key = #{authKey}
		]]>
	</select>
	
	<!-- Address -->
	<select id="addressShow" resultType="addressVO" parameterType="addressVO">
		<![CDATA[
			select * from user_address where user_email = #{user_email} order by address_seq
		]]>
	</select>
	<select id="addressSelect" resultType="addressVO">
		<![CDATA[
			select * from user_address where user_email = #{user_email}
		]]>
	</select>
	<insert id="addressInsert">
		<![CDATA[
			insert into user_address (address1, address2, d_key, user_email, order_comment, address_lat ,address_lon) values (#{address1}, #{address2}, 0, #{user_email}, #{order_comment}, #{address_lat}, #{address_lon})
		]]>
	</insert>
	<update id="addressUpdate">
		<![CDATA[
			update user_address set address1=#{address1}, address2 = #{address2}, order_comment = #{order_comment} where user_email = #{user_email}
		]]>
	</update>
	
		
	<delete id="addressDelete" parameterType="int">
		<![CDATA[
			delete from user_address where address_seq = #{address_seq}
		]]>
	</delete>
	

	<!-- user_coupon -->
	<select id="userCouponSelect" resultType="UserCouponVO" parameterType="UserCouponVO">
		select * from user_coupon where user_seq = #{user_seq}
	</select>
	<select id="couponSelect" resultType="int">
		select count(*) from coupon where coupon_code = #{couponCode}
	</select>
	
	<!-- payment List -->
	<select id="paymentList" resultType="paymentVO" parameterType="HashMap">
	<![CDATA[
		select * from order_list where user_email=#{user_email} and order_status = '배달 완료' 
		]]> 
		<if test="start_history !=  null and end_history != null">
			and to_char(order_date, 'yyyy-MM-dd') between #{start_history} and #{end_history}
		</if>
		<![CDATA[
		 order by order_seq desc
			]]>
	</select>
	

	<select id="getUserPaymentInfo" resultType="paymentVO" parameterType="String">
	<![CDATA[
		select * from order_list where user_email=#{user_email} and order_status != '주문취소' and
		order_date between  (now() - INTERVAL '3 day') and now()
		order by order_seq desc
		]]>
	</select>
	<update id="orderCancel">
      update order_list set order_status = '주문취소' where order_seq = #{order_seq}
	</update>
	<select id="cartCancel" resultType="cartVO" parameterType="paymentVO">
		select * from cart_list where order_seq = #{order_seq}
	</select>
	<update id="toyCancel">
		update toy_count set ht_count = (ht_count + #{product_quantity}) 
		where admin_seq = (select admin_seq from admin, order_list where admin.store_code = order_list.store_code
		and admin.store_code = (select store_code from order_list where order_seq = #{order_seq}) 
		and order_seq = #{order_seq}) and ht_code = #{ht_code}
	</update>
	
	<update id="restoreCouponStatus">
	<![CDATA[
      update user_coupon set user_coupon_status = 0 
      where user_seq = (select user_seq from user_info where user_email=#{user_email})
      and coupon_code=#{coupon_code}
      ]]>
   </update>
	
	<select id="getCartListByMerchantId" resultType="cartVO" parameterType="String">
	<![CDATA[
		select * from cart_list where merchantuid=#{merchantUid}	order by order_seq desc
		]]>
	</select>
	
	<select id="getStoreList" resultType="adminVO">
		select * from admin
	</select>
	
	<update id="updatePassword">
		<![CDATA[
			update user_info set user_password=#{user_password} where user_email = #{user_email}
		]]>
	</update>
	
	<select id="selectPromotionIng" resultType="promotionVO">
		<![CDATA[
			SELECT * FROM promotion WHERE p_status = 1 ORDER BY p_code ASC
		]]>
	</select>
	
	<select id="detailPromotion" resultType="promotionVO">
		<![CDATA[
			SELECT * FROM promotion WHERE p_code = #{p_code} ORDER BY p_code ASC
		]]>
	</select>
	
	<update id="countPromotion">
		<![CDATA[
			UPDATE promotion SET p_count = p_count + 1 WHERE p_code = #{p_code}
		]]>
	</update>
	<select id="selectCouponBook" parameterType="userVO" resultType="adminCouponVO">
		<![CDATA[
			SELECT C.coupon_code as coupon_code,coupon_title,
			coupon_type,coupon_regdate,c.coupon_enddate as coupon_enddate,
			coupon_status,coupon_seq,coupon_discount,u.user_seq as user_seq,
			coupon_startdate,user_coupon_status as user_coupon_status
			FROM COUPON C LEFT JOIN USER_COUPON U ON U.COUPON_CODE = C.COUPON_CODE 
			AND USER_SEQ = #{user_seq} WHERE C.COUPON_STATUS =0 order by coupon_enddate desc
		]]>
	</select>
	
	<insert id="registerUserCoupon">
		<![CDATA[
			INSERT INTO USER_COUPON (USER_SEQ,COUPON_CODE,
			COUPON_STARTDATE,USER_COUPON_STATUS,
			COUPON_NAME,COUPON_ENDDATE) 
			VALUES(#{user_seq},#{coupon_code},NOW(),0,(SELECT COUPON_TITLE FROM COUPON WHERE COUPON_CODE=#{coupon_code}),
			(SELECT COUPON_ENDDATE FROM COUPON WHERE COUPON_CODE=#{coupon_code}))
		]]>
	</insert>
	
	<select id="getUserCoupons" parameterType="userVO" resultType="adminCouponVO">
		<![CDATA[
			select u.coupon_code,c.coupon_title,c.coupon_type,
			c.coupon_enddate,c.coupon_discount
			from user_coupon u right join coupon c on 
			c.coupon_code =u.coupon_code where user_seq = #{user_seq}
			and user_coupon_status =0 order by coupon_enddate desc
		]]>
	</select>
	
	<update id="restoreSocialMemStatus">
		<![CDATA[
			update user_info
			set user_status = #{user_status} where user_email = #{user_email}
		]]>
	</update>
	
	<update id="insertLastLogin">
		<![CDATA[
			update user_info
			set last_login = now() where user_email = #{user_email}
		]]>
	</update>
</mapper>